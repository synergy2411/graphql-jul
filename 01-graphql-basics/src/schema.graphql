type Query {
  users: [User!]!
  posts: [Post!]!
  comments: [Comment!]!
}
type Mutation {
  createUser(data: CreateUserInput): User!
  deleteUser(id: ID!): User!
  updateUser(id: ID!, data: UpdateUserInput): User!
  createPost(data: CreatePostInput): Post!
  deletePost(id: ID!): Post!
  updatePost(id: ID!, data: UpdatePostInput): Post!
  createComment(data: CreateCommentInput): Comment!
  deleteComment(id: ID!): Comment!
}
input UpdatePostInput {
  title: String
  body: String
  published: Boolean
}
input UpdateUserInput {
  name: String
  email: String
  age: Int
}
input CreateCommentInput {
  text: String!
  postId: ID!
  authorId: ID!
}
input CreatePostInput {
  title: String!
  body: String!
  published: Boolean!
  authorId: ID!
}
input CreateUserInput {
  name: String!
  email: String!
  age: Int
}
type Comment {
  id: ID!
  text: String!
  post: Post!
  author: User!
}
type Post {
  id: ID!
  title: String!
  body: String!
  published: Boolean!
  author: User!
  comments: [Comment!]!
}
type User {
  id: ID!
  name: String!
  age: Int
  email: String!
  posts: [Post!]!
  comments: [Comment!]!
}
